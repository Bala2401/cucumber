<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-20T07:40:43 IST" name="Default suite" finished-at="2022-01-20T07:43:24 IST" duration-ms="161106">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-01-20T07:40:43 IST" name="Default test" finished-at="2022-01-20T07:43:24 IST" duration-ms="161106">
      <class name="com.mindtree.runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:40:43 IST" name="setUpClass" finished-at="2022-01-20T07:40:44 IST" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3f866f50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:40:44 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:41:16 IST" duration-ms="32764" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Airport cab services"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Airport]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Select the first car' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Then("Select the first car")
public void select_the_first_car() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("validate car in car details")
public void validate_car_in_car_details() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Select the first car' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Then("Select the first car")
public void select_the_first_car() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("validate car in car details")
public void validate_car_in_car_details() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:110)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:110)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:41:16 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:41:21 IST" duration-ms="4987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Title of homepage validation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Homepage]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:41:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:41:27 IST" duration-ms="5298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["CEO Validation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Homepage]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:41:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:41:33 IST" duration-ms="6406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["ContactUs"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Homepage]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:41:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:41:54 IST" duration-ms="20592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Local cab services"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Local path]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:41:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:42:14 IST" duration-ms="20639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating Text is displayed after filling the fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Corporate car Rental under services]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:42:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:42:30 IST" duration-ms="15583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the North route"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[One way cab]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:42:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:42:50 IST" duration-ms="20015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Outstaion cab services"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Outsation path]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:42:50 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:43:10 IST" duration-ms="20447" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Outstaion cab services"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Outsation path]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [₹ 7493] but found [₹ 5124]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [₹ 7493] but found [₹ 5124]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.mindtree.pageobject.outstationpageobject.validate(outstationpageobject.java:83)
at com.mindtree.stepDefination.outstationstepdefinition.validate_car_type_under_booking_details(outstationstepdefinition.java:130)
at ✽.validate car type under booking details(file:///C:/Users/tejareddy/OneDrive/Desktop/Cucumberframework/Features/out.feature:35)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:43:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:43:17 IST" duration-ms="6474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Login"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login Validation]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:43:17 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-20T07:43:24 IST" duration-ms="7396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Title of your scenario"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Cab Type]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.mindtree.runner.TestRunner@2892dae4]" started-at="2022-01-20T07:43:24 IST" name="tearDownClass" finished-at="2022-01-20T07:43:24 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.mindtree.runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
